{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 163,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import numpy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "No,GPA,Years of work experience,Latest salary (per year),Highest GPA ,Lowest GPA,Coops/Internships (YN),Number of contacts on Linkedin,Expected Salary after graduation\n",
      "1,3.5,2.5,45000,3.5,3.5,N,250,90000\n",
      "3,3.8,1,65000,3.6,3,Y,400,100000\n",
      "4,3.8,2,85000,4,3.6,Y,500,90000\n",
      "5,3.41,1.5,10000,3.41,3.33,N,365,100000\n",
      "6,3.33,5,70000,3.67,3,Y,400,100000\n",
      "7,3.52,2.5,27000,3.58,3.52,N,230,85000\n",
      "8,3.5,2,40000,3.7,3.3,N,250,90000\n",
      "9,3.5,5,75000,3.53,3.3,Y,260,100000\n",
      "10,3.6,2.5,65000,3.9,3.1,Y,250,110000\n",
      "11,3.2,4,62000,3.8,3,N,525,105000\n",
      "12,3.5,2,60000,3.5,3.5,N,400,85000\n",
      "13,3.67,1.8,60000,4,3,N,920,140000\n",
      "14,3.5,2,60000,3.7,3.3,y,300,90000\n",
      "15,3.47,2.5,70000,3.64,3.37,Y,310,95000\n",
      "16,3.06,1.3,40000,3.64,2.67,Y,550,120000\n",
      "17,3.27,2,60000,4,3,Y,350,100000\n",
      "18,3.53,4,50000,4,3.3,N,600,88000\n",
      "19,4,4,50000,4,4,Y,500,130000\n",
      "20,3.4,1,30000,3.6,3.1,N,500,80000\n",
      "21,3.54,1,40000,4,3.42,Y,650,95000\n",
      "22,3.5,2,75000,4,3,Y,515,80000\n",
      "23,3.5,4,50000,3.8,3.2,Y,350,110000\n",
      "24,3.4,3,50000,3.8,3.2,Y,301,90000\n",
      "26,3.3,4,65000,4,3.65,Y,700,100000\n",
      "27,3.9,6,90000,4,3.8,Y,809,120000\n",
      "28,3.17,1,50000,3.3,3,N,258,100000\n",
      "29,3.48,3.5,60000,4,3.33,Y,350,100000\n",
      "30,3.93,4,43000,4,3.28,Y,900,100000\n",
      "31,3.43,4,60000,3.5,3.3,Y,220,110000\n",
      "32,3.33,5,5000,3.66,3,Y,183,100000\n",
      "33,3.6,1.5,60000,3.7,3.4,Y,340,100000\n",
      "34,3.8,3,65000,3.8,3.5,Y,800,80000\n",
      "35,3.5,3,65000,4,3.6,Y,400,80000\n",
      "36,3.39,2,60000,3.8,3.2,Y,500,90000\n"
     ]
    }
   ],
   "source": [
    "with open('ClassData.csv') as f:\n",
    "    stg = f.read()\n",
    "print(stg[0:])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "#data[0,:1]\n",
    "#for row in reader:     #print(row['first_name'], row['last_name'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "#GPA = []\n",
    "#with open(\"ClassData.csv\", 'r') as f:\n",
    " #   data = csv.reader(f)\n",
    "#  for row in data:\n",
    "   #     GPA.append(row[1])\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No</th>\n",
       "      <th>GPA</th>\n",
       "      <th>Years of work experience</th>\n",
       "      <th>Latest salary (per year)</th>\n",
       "      <th>Highest GPA</th>\n",
       "      <th>Lowest GPA</th>\n",
       "      <th>Coops/Internships (YN)</th>\n",
       "      <th>Number of contacts on Linkedin</th>\n",
       "      <th>Expected Salary after graduation</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>3.50</td>\n",
       "      <td>2.5</td>\n",
       "      <td>45000</td>\n",
       "      <td>3.50</td>\n",
       "      <td>3.50</td>\n",
       "      <td>N</td>\n",
       "      <td>250</td>\n",
       "      <td>90000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3</td>\n",
       "      <td>3.80</td>\n",
       "      <td>1.0</td>\n",
       "      <td>65000</td>\n",
       "      <td>3.60</td>\n",
       "      <td>3.00</td>\n",
       "      <td>Y</td>\n",
       "      <td>400</td>\n",
       "      <td>100000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4</td>\n",
       "      <td>3.80</td>\n",
       "      <td>2.0</td>\n",
       "      <td>85000</td>\n",
       "      <td>4.00</td>\n",
       "      <td>3.60</td>\n",
       "      <td>Y</td>\n",
       "      <td>500</td>\n",
       "      <td>90000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5</td>\n",
       "      <td>3.41</td>\n",
       "      <td>1.5</td>\n",
       "      <td>10000</td>\n",
       "      <td>3.41</td>\n",
       "      <td>3.33</td>\n",
       "      <td>N</td>\n",
       "      <td>365</td>\n",
       "      <td>100000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>6</td>\n",
       "      <td>3.33</td>\n",
       "      <td>5.0</td>\n",
       "      <td>70000</td>\n",
       "      <td>3.67</td>\n",
       "      <td>3.00</td>\n",
       "      <td>Y</td>\n",
       "      <td>400</td>\n",
       "      <td>100000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>7</td>\n",
       "      <td>3.52</td>\n",
       "      <td>2.5</td>\n",
       "      <td>27000</td>\n",
       "      <td>3.58</td>\n",
       "      <td>3.52</td>\n",
       "      <td>N</td>\n",
       "      <td>230</td>\n",
       "      <td>85000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>8</td>\n",
       "      <td>3.50</td>\n",
       "      <td>2.0</td>\n",
       "      <td>40000</td>\n",
       "      <td>3.70</td>\n",
       "      <td>3.30</td>\n",
       "      <td>N</td>\n",
       "      <td>250</td>\n",
       "      <td>90000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>9</td>\n",
       "      <td>3.50</td>\n",
       "      <td>5.0</td>\n",
       "      <td>75000</td>\n",
       "      <td>3.53</td>\n",
       "      <td>3.30</td>\n",
       "      <td>Y</td>\n",
       "      <td>260</td>\n",
       "      <td>100000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>10</td>\n",
       "      <td>3.60</td>\n",
       "      <td>2.5</td>\n",
       "      <td>65000</td>\n",
       "      <td>3.90</td>\n",
       "      <td>3.10</td>\n",
       "      <td>Y</td>\n",
       "      <td>250</td>\n",
       "      <td>110000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>11</td>\n",
       "      <td>3.20</td>\n",
       "      <td>4.0</td>\n",
       "      <td>62000</td>\n",
       "      <td>3.80</td>\n",
       "      <td>3.00</td>\n",
       "      <td>N</td>\n",
       "      <td>525</td>\n",
       "      <td>105000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>12</td>\n",
       "      <td>3.50</td>\n",
       "      <td>2.0</td>\n",
       "      <td>60000</td>\n",
       "      <td>3.50</td>\n",
       "      <td>3.50</td>\n",
       "      <td>N</td>\n",
       "      <td>400</td>\n",
       "      <td>85000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>13</td>\n",
       "      <td>3.67</td>\n",
       "      <td>1.8</td>\n",
       "      <td>60000</td>\n",
       "      <td>4.00</td>\n",
       "      <td>3.00</td>\n",
       "      <td>N</td>\n",
       "      <td>920</td>\n",
       "      <td>140000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>14</td>\n",
       "      <td>3.50</td>\n",
       "      <td>2.0</td>\n",
       "      <td>60000</td>\n",
       "      <td>3.70</td>\n",
       "      <td>3.30</td>\n",
       "      <td>y</td>\n",
       "      <td>300</td>\n",
       "      <td>90000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>15</td>\n",
       "      <td>3.47</td>\n",
       "      <td>2.5</td>\n",
       "      <td>70000</td>\n",
       "      <td>3.64</td>\n",
       "      <td>3.37</td>\n",
       "      <td>Y</td>\n",
       "      <td>310</td>\n",
       "      <td>95000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>16</td>\n",
       "      <td>3.06</td>\n",
       "      <td>1.3</td>\n",
       "      <td>40000</td>\n",
       "      <td>3.64</td>\n",
       "      <td>2.67</td>\n",
       "      <td>Y</td>\n",
       "      <td>550</td>\n",
       "      <td>120000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>17</td>\n",
       "      <td>3.27</td>\n",
       "      <td>2.0</td>\n",
       "      <td>60000</td>\n",
       "      <td>4.00</td>\n",
       "      <td>3.00</td>\n",
       "      <td>Y</td>\n",
       "      <td>350</td>\n",
       "      <td>100000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>18</td>\n",
       "      <td>3.53</td>\n",
       "      <td>4.0</td>\n",
       "      <td>50000</td>\n",
       "      <td>4.00</td>\n",
       "      <td>3.30</td>\n",
       "      <td>N</td>\n",
       "      <td>600</td>\n",
       "      <td>88000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>19</td>\n",
       "      <td>4.00</td>\n",
       "      <td>4.0</td>\n",
       "      <td>50000</td>\n",
       "      <td>4.00</td>\n",
       "      <td>4.00</td>\n",
       "      <td>Y</td>\n",
       "      <td>500</td>\n",
       "      <td>130000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>20</td>\n",
       "      <td>3.40</td>\n",
       "      <td>1.0</td>\n",
       "      <td>30000</td>\n",
       "      <td>3.60</td>\n",
       "      <td>3.10</td>\n",
       "      <td>N</td>\n",
       "      <td>500</td>\n",
       "      <td>80000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>21</td>\n",
       "      <td>3.54</td>\n",
       "      <td>1.0</td>\n",
       "      <td>40000</td>\n",
       "      <td>4.00</td>\n",
       "      <td>3.42</td>\n",
       "      <td>Y</td>\n",
       "      <td>650</td>\n",
       "      <td>95000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>22</td>\n",
       "      <td>3.50</td>\n",
       "      <td>2.0</td>\n",
       "      <td>75000</td>\n",
       "      <td>4.00</td>\n",
       "      <td>3.00</td>\n",
       "      <td>Y</td>\n",
       "      <td>515</td>\n",
       "      <td>80000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>23</td>\n",
       "      <td>3.50</td>\n",
       "      <td>4.0</td>\n",
       "      <td>50000</td>\n",
       "      <td>3.80</td>\n",
       "      <td>3.20</td>\n",
       "      <td>Y</td>\n",
       "      <td>350</td>\n",
       "      <td>110000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>24</td>\n",
       "      <td>3.40</td>\n",
       "      <td>3.0</td>\n",
       "      <td>50000</td>\n",
       "      <td>3.80</td>\n",
       "      <td>3.20</td>\n",
       "      <td>Y</td>\n",
       "      <td>301</td>\n",
       "      <td>90000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>26</td>\n",
       "      <td>3.30</td>\n",
       "      <td>4.0</td>\n",
       "      <td>65000</td>\n",
       "      <td>4.00</td>\n",
       "      <td>3.65</td>\n",
       "      <td>Y</td>\n",
       "      <td>700</td>\n",
       "      <td>100000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>27</td>\n",
       "      <td>3.90</td>\n",
       "      <td>6.0</td>\n",
       "      <td>90000</td>\n",
       "      <td>4.00</td>\n",
       "      <td>3.80</td>\n",
       "      <td>Y</td>\n",
       "      <td>809</td>\n",
       "      <td>120000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>28</td>\n",
       "      <td>3.17</td>\n",
       "      <td>1.0</td>\n",
       "      <td>50000</td>\n",
       "      <td>3.30</td>\n",
       "      <td>3.00</td>\n",
       "      <td>N</td>\n",
       "      <td>258</td>\n",
       "      <td>100000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>29</td>\n",
       "      <td>3.48</td>\n",
       "      <td>3.5</td>\n",
       "      <td>60000</td>\n",
       "      <td>4.00</td>\n",
       "      <td>3.33</td>\n",
       "      <td>Y</td>\n",
       "      <td>350</td>\n",
       "      <td>100000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>30</td>\n",
       "      <td>3.93</td>\n",
       "      <td>4.0</td>\n",
       "      <td>43000</td>\n",
       "      <td>4.00</td>\n",
       "      <td>3.28</td>\n",
       "      <td>Y</td>\n",
       "      <td>900</td>\n",
       "      <td>100000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>31</td>\n",
       "      <td>3.43</td>\n",
       "      <td>4.0</td>\n",
       "      <td>60000</td>\n",
       "      <td>3.50</td>\n",
       "      <td>3.30</td>\n",
       "      <td>Y</td>\n",
       "      <td>220</td>\n",
       "      <td>110000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>32</td>\n",
       "      <td>3.33</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5000</td>\n",
       "      <td>3.66</td>\n",
       "      <td>3.00</td>\n",
       "      <td>Y</td>\n",
       "      <td>183</td>\n",
       "      <td>100000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>33</td>\n",
       "      <td>3.60</td>\n",
       "      <td>1.5</td>\n",
       "      <td>60000</td>\n",
       "      <td>3.70</td>\n",
       "      <td>3.40</td>\n",
       "      <td>Y</td>\n",
       "      <td>340</td>\n",
       "      <td>100000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>34</td>\n",
       "      <td>3.80</td>\n",
       "      <td>3.0</td>\n",
       "      <td>65000</td>\n",
       "      <td>3.80</td>\n",
       "      <td>3.50</td>\n",
       "      <td>Y</td>\n",
       "      <td>800</td>\n",
       "      <td>80000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>35</td>\n",
       "      <td>3.50</td>\n",
       "      <td>3.0</td>\n",
       "      <td>65000</td>\n",
       "      <td>4.00</td>\n",
       "      <td>3.60</td>\n",
       "      <td>Y</td>\n",
       "      <td>400</td>\n",
       "      <td>80000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>36</td>\n",
       "      <td>3.39</td>\n",
       "      <td>2.0</td>\n",
       "      <td>60000</td>\n",
       "      <td>3.80</td>\n",
       "      <td>3.20</td>\n",
       "      <td>Y</td>\n",
       "      <td>500</td>\n",
       "      <td>90000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    No   GPA  Years of work experience  Latest salary (per year)  \\\n",
       "0    1  3.50                       2.5                     45000   \n",
       "1    3  3.80                       1.0                     65000   \n",
       "2    4  3.80                       2.0                     85000   \n",
       "3    5  3.41                       1.5                     10000   \n",
       "4    6  3.33                       5.0                     70000   \n",
       "5    7  3.52                       2.5                     27000   \n",
       "6    8  3.50                       2.0                     40000   \n",
       "7    9  3.50                       5.0                     75000   \n",
       "8   10  3.60                       2.5                     65000   \n",
       "9   11  3.20                       4.0                     62000   \n",
       "10  12  3.50                       2.0                     60000   \n",
       "11  13  3.67                       1.8                     60000   \n",
       "12  14  3.50                       2.0                     60000   \n",
       "13  15  3.47                       2.5                     70000   \n",
       "14  16  3.06                       1.3                     40000   \n",
       "15  17  3.27                       2.0                     60000   \n",
       "16  18  3.53                       4.0                     50000   \n",
       "17  19  4.00                       4.0                     50000   \n",
       "18  20  3.40                       1.0                     30000   \n",
       "19  21  3.54                       1.0                     40000   \n",
       "20  22  3.50                       2.0                     75000   \n",
       "21  23  3.50                       4.0                     50000   \n",
       "22  24  3.40                       3.0                     50000   \n",
       "23  26  3.30                       4.0                     65000   \n",
       "24  27  3.90                       6.0                     90000   \n",
       "25  28  3.17                       1.0                     50000   \n",
       "26  29  3.48                       3.5                     60000   \n",
       "27  30  3.93                       4.0                     43000   \n",
       "28  31  3.43                       4.0                     60000   \n",
       "29  32  3.33                       5.0                      5000   \n",
       "30  33  3.60                       1.5                     60000   \n",
       "31  34  3.80                       3.0                     65000   \n",
       "32  35  3.50                       3.0                     65000   \n",
       "33  36  3.39                       2.0                     60000   \n",
       "\n",
       "    Highest GPA   Lowest GPA Coops/Internships (YN)  \\\n",
       "0           3.50        3.50                      N   \n",
       "1           3.60        3.00                      Y   \n",
       "2           4.00        3.60                      Y   \n",
       "3           3.41        3.33                      N   \n",
       "4           3.67        3.00                      Y   \n",
       "5           3.58        3.52                      N   \n",
       "6           3.70        3.30                      N   \n",
       "7           3.53        3.30                      Y   \n",
       "8           3.90        3.10                      Y   \n",
       "9           3.80        3.00                      N   \n",
       "10          3.50        3.50                      N   \n",
       "11          4.00        3.00                      N   \n",
       "12          3.70        3.30                      y   \n",
       "13          3.64        3.37                      Y   \n",
       "14          3.64        2.67                      Y   \n",
       "15          4.00        3.00                      Y   \n",
       "16          4.00        3.30                      N   \n",
       "17          4.00        4.00                      Y   \n",
       "18          3.60        3.10                      N   \n",
       "19          4.00        3.42                      Y   \n",
       "20          4.00        3.00                      Y   \n",
       "21          3.80        3.20                      Y   \n",
       "22          3.80        3.20                      Y   \n",
       "23          4.00        3.65                      Y   \n",
       "24          4.00        3.80                      Y   \n",
       "25          3.30        3.00                      N   \n",
       "26          4.00        3.33                      Y   \n",
       "27          4.00        3.28                      Y   \n",
       "28          3.50        3.30                      Y   \n",
       "29          3.66        3.00                      Y   \n",
       "30          3.70        3.40                      Y   \n",
       "31          3.80        3.50                      Y   \n",
       "32          4.00        3.60                      Y   \n",
       "33          3.80        3.20                      Y   \n",
       "\n",
       "    Number of contacts on Linkedin  Expected Salary after graduation  \n",
       "0                              250                             90000  \n",
       "1                              400                            100000  \n",
       "2                              500                             90000  \n",
       "3                              365                            100000  \n",
       "4                              400                            100000  \n",
       "5                              230                             85000  \n",
       "6                              250                             90000  \n",
       "7                              260                            100000  \n",
       "8                              250                            110000  \n",
       "9                              525                            105000  \n",
       "10                             400                             85000  \n",
       "11                             920                            140000  \n",
       "12                             300                             90000  \n",
       "13                             310                             95000  \n",
       "14                             550                            120000  \n",
       "15                             350                            100000  \n",
       "16                             600                             88000  \n",
       "17                             500                            130000  \n",
       "18                             500                             80000  \n",
       "19                             650                             95000  \n",
       "20                             515                             80000  \n",
       "21                             350                            110000  \n",
       "22                             301                             90000  \n",
       "23                             700                            100000  \n",
       "24                             809                            120000  \n",
       "25                             258                            100000  \n",
       "26                             350                            100000  \n",
       "27                             900                            100000  \n",
       "28                             220                            110000  \n",
       "29                             183                            100000  \n",
       "30                             340                            100000  \n",
       "31                             800                             80000  \n",
       "32                             400                             80000  \n",
       "33                             500                             90000  "
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "mydata = pd.read_csv(\"ClassData.csv\")\n",
    "mydata"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 160,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "minGPA: 3.06  maxGPA:  4.0  meanGPA: 3.5097058823529426  medianGPA: 3.5\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "count    34.000000\n",
       "mean      3.509706\n",
       "std       0.213421\n",
       "min       3.060000\n",
       "25%       3.400000\n",
       "50%       3.500000\n",
       "75%       3.585000\n",
       "max       4.000000\n",
       "Name: GPA, dtype: float64"
      ]
     },
     "execution_count": 160,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# a.1) Min, Max, Median, Avg for GPA\n",
    "minGPA = mydata['GPA'].min()\n",
    "maxGPA = mydata['GPA'].max()\n",
    "meanGPA = mydata['GPA'].mean()\n",
    "medianGPA= mydata['GPA'].median()\n",
    "print('minGPA:',minGPA,'' ,'maxGPA:','' , maxGPA,'' ,'meanGPA:',meanGPA ,'' ,'medianGPA:',medianGPA)\n",
    "\n",
    "#or\n",
    "mydata['GPA'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "minYearOfWork: 1.0   maxYearOfWork:   maxYearOfWork:  2.8117647058823527  meanYearOfWork:  2.5\n"
     ]
    }
   ],
   "source": [
    "#a.2) Min, Max, Median, Avg for GPA and YearOfWork\n",
    "minYearOfWork=mydata['Years of work experience'].min()\n",
    "maxYearOfWork=mydata['Years of work experience'].max()\n",
    "meanYearOfWork=mydata['Years of work experience'].mean()\n",
    "medianYearOfWork=mydata['Years of work experience'].median()\n",
    "\n",
    "print('minYearOfWork:',minYearOfWork,' ','maxYearOfWork:',' ', 'maxYearOfWork:','' ,meanYearOfWork,'','meanYearOfWork:','',medianYearOfWork)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0    60000\n",
      "dtype: int64\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No</th>\n",
       "      <th>GPA</th>\n",
       "      <th>Years of work experience</th>\n",
       "      <th>Latest salary (per year)</th>\n",
       "      <th>Highest GPA</th>\n",
       "      <th>Lowest GPA</th>\n",
       "      <th>Coops/Internships (YN)</th>\n",
       "      <th>Number of contacts on Linkedin</th>\n",
       "      <th>Expected Salary after graduation</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>NaN</td>\n",
       "      <td>3.5</td>\n",
       "      <td>2.0</td>\n",
       "      <td>60000.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>Y</td>\n",
       "      <td>400</td>\n",
       "      <td>100000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>500</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   No  GPA  Years of work experience  Latest salary (per year)  Highest GPA   \\\n",
       "0 NaN  3.5                       2.0                   60000.0           4.0   \n",
       "1 NaN  NaN                       4.0                       NaN           NaN   \n",
       "\n",
       "   Lowest GPA Coops/Internships (YN)  Number of contacts on Linkedin  \\\n",
       "0         3.0                      Y                             400   \n",
       "1         NaN                    NaN                             500   \n",
       "\n",
       "   Expected Salary after graduation  \n",
       "0                          100000.0  \n",
       "1                               NaN  "
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#b) Find mode of salary\n",
    "modeSalary=mydata['Latest salary (per year)'].mode()\n",
    "print(modeSalary)\n",
    "#or\n",
    "mydata.mode()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Y    0.676471\n",
       "N    0.294118\n",
       "y    0.029412\n",
       "Name: Coops/Internships (YN), dtype: float64"
      ]
     },
     "execution_count": 122,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#c) % of students having co-op and not having co-op\n",
    "totalStudents = mydata['No'].count()\n",
    "count = mydata['Coops/Internships (YN)'].value_counts()\n",
    "percentStudents = count/totalStudents\n",
    "percentStudents\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "10"
      ]
     },
     "execution_count": 157,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#d) No of students with more than 500 LinkedIn contacts\n",
    "#df[(df['A']>0) & (df['B']>0) & (df['C']>0)].count()\n",
    "LinkedInContacts = mydata[(mydata['Number of contacts on Linkedin']>500)].count()['Number of contacts on Linkedin']\n",
    "LinkedInContacts\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 161,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "10000.0"
      ]
     },
     "execution_count": 161,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#e)Find the Inter Quartile Range for Expected Salary\n",
    "#mtcars[\"mpg\"].quantile(0.75) - mtcars[\"mpg\"].quantile(0.25)\n",
    "InterQuartileSalary = mydata['Expected Salary after graduation'].quantile(0.75) -mydata['Expected Salary after graduation'].quantile(0.25)\n",
    "InterQuartileSalary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "\n"
   ]
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python [conda root]",
   "language": "python",
   "name": "conda-root-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
